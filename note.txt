===========apt update upgrade
sudo apt update -y && sudo apt upgrade -y

===========add host
192.168.22.111 k8smaster1
192.168.22.112 k8smaster2
192.168.22.113 k8smaster3
==========reset k8s cluster
sudo kubeadm reset -f
sudo rm -rf /var/lib/etcd
sudo rm -rf /etc/kubernetes/manifests/*

=============set up cluster
sudo swapoff -a
sudo sed -i '/swap.img/s/^/#/' /etc/fstab

echo -e "overlay\nbr_netfilter" | sudo tee /etc/modules-load.d/containerd.conf
sudo modprobe overlay
sudo modprobe br_netfilter

echo "net.bridge.bridge-nf-call-ip6tables = 1" | sudo tee -a /etc/sysctl.d/kubernetes.conf
echo "net.bridge.bridge-nf-call-iptables = 1" | sudo tee -a /etc/sysctl.d/kubernetes.conf
echo "net.ipv4.ip_forward = 1" | sudo tee -a /etc/sysctl.d/kubernetes.conf
sudo sysctl --system

===docker and containerd
sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

sudo apt update -y
sudo apt install -y containerd.io

containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
sudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml

sudo systemctl restart containerd
sudo systemctl enable containerd
sudo systemctl status containerd


=============k8s packages
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

sudo apt update -y
sudo apt install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

====== masters
sudo kubeadm init --control-plane-endpoint "192.168.1.111:6443" --upload-certs

mkdir -p $HOME/.kube 
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.5/manifests/calico.yaml
=========================master 2 and master 3
sudo  kubeadm join 192.168.1.111:6443 --token 1snmfy.2kyutlspo51vpovz \
        --discovery-token-ca-cert-hash sha256:1d60d035c677fe8fd00cee6059b16c53f6b9e7aa0fe3479e806b1fcca3186ae2 \
        --control-plane --certificate-key 6c974832aa8602859fd983d87f6c656a3d10118f2db608ae9b769f7fd0e6abe3

=========rancher run with SUDO
mkfs.ext4 -m 0 /dev/sdb
mkdir /data
echo "/dev/sdb  /data  ext4  defaults  0  0" | sudo tee -a /etc/fstab
mount -a
df -h

apt install docker.io -y
apt install docker-compose -y
docker -v && docker-compose -v

mkdir /data/rancher
cd /data/rancher

vi docker-compose.yml

version: '3'
services:
  rancher-server:
    image: rancher/rancher:v2.10.2
    container_name: rancher-server
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /data/rancher/data:/var/lib/rancher
    privileged: true

docker-compose up -d
docker ps -a
docker logs rancher-server 2>&1 | grep "Bootstrap Password:"

admin/sijtMAKnpSEt7qaV
